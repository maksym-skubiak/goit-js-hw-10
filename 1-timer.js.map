{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["const datetimePicker = document.getElementById('datetime-picker');\n\nconst startButton = document.getElementById('start-button');\n\nlet userSelectedDate = null;\nlet timerInterval;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nflatpickr(datetimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n\n    if (userSelectedDate < currentDate) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n});\n\nfunction updateTimer() {\n  if (!userSelectedDate) {\n    return;\n  }\n\n  const now = new Date();\n  const timeRemaining = userSelectedDate - now;\n\n  if (timeRemaining <= 0) {\n    clearInterval(timerInterval);\n    startButton.disabled = false;\n    document.getElementById('datetime-picker').disabled = false;\n    iziToast.success({\n      title: 'Finished!',\n      message: 'The countdown is over.',\n    });\n  } else {\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent =\n      addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent =\n      addLeadingZero(seconds);\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  document.getElementById('datetime-picker').disabled = true;\n  timerInterval = setInterval(updateTimer, 1000);\n});\n"],"names":["datetimePicker","startButton","userSelectedDate","timerInterval","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","selectedDates","updateTimer","timeRemaining"],"mappings":"oDAAA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAE1DC,EAAc,SAAS,eAAe,cAAc,EAE1D,IAAIC,EAAmB,KACnBC,EAEJ,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,UAAUX,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQY,EAAe,CACrBV,EAAmBU,EAAc,CAAC,EAG9BV,EAFgB,IAAI,MAGtB,SAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDD,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,CAAC,EAED,SAASY,GAAc,CACrB,GAAI,CAACX,EACH,OAIF,MAAMY,EAAgBZ,EADV,IAAI,KAGhB,GAAIY,GAAiB,EACnB,cAAcX,CAAa,EAC3BF,EAAY,SAAW,GACvB,SAAS,eAAe,iBAAiB,EAAE,SAAW,GACtD,SAAS,QAAQ,CACf,MAAO,YACP,QAAS,wBACf,CAAK,MACI,CACL,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAa,EACjE,SAAS,cAAc,aAAa,EAAE,YAAcV,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCL,EAAeM,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCN,EAAeO,CAAO,CACzB,CACH,CAEAV,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvB,SAAS,eAAe,iBAAiB,EAAE,SAAW,GACtDE,EAAgB,YAAYU,EAAa,GAAI,CAC/C,CAAC"}